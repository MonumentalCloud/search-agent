name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Upgrade pip, setuptools, and wheel
      run: |
        python -m pip install --upgrade pip setuptools wheel
    
    - name: Install numpy with pre-built wheels
      run: |
        pip install --only-binary=all numpy
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run basic tests
      run: |
        python -c "import numpy; print('NumPy version:', numpy.__version__)"
        python -c "import chromadb; print('ChromaDB imported successfully')"
        python -c "import fastapi; print('FastAPI imported successfully')"
        python -c "import langchain; print('LangChain imported successfully')"
    
    - name: Test API startup (basic check)
      run: |
        python -c "
        try:
            from apps.api.main import app
            print('API app created successfully')
        except Exception as e:
            print(f'API startup test failed: {e}')
            exit(1)
        "

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Upgrade pip, setuptools, and wheel
      run: |
        python -m pip install --upgrade pip setuptools wheel
    
    - name: Install numpy with pre-built wheels
      run: |
        pip install --only-binary=all numpy
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Test build script
      run: |
        chmod +x render_build.sh
        ./render_build.sh
    
    - name: Test startup script
      run: |
        python -c "
        try:
            import sys
            sys.path.append('.')
            from render_start import create_app
            print('Startup script test passed')
        except Exception as e:
            print(f'Startup script test failed: {e}')
            exit(1)
        "
